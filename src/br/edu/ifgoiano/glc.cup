package br.edu.ifgoiano;

import java_cup.runtime.*;

parser code {:
  public void syntax_error(Symbol s){
    this.defineError(s.left, s.right);
  }
  public void defineError(int line, int column, String text) {
    Yylex scanner = (Yylex) this.getScanner();
  scanner.defineError(line, column, text);
  }
  public void defineError(int linha, int coluna){
    Yylex scanner = (Yylex) this.getScanner();
    scanner.defineError(linha, coluna);
  }
  public void defineError(String text) {
    Yylex scanner = (Yylex) this.getScanner();
    scanner.defineError(text);
  }
:};


// TERMINAIS
terminal GRAPH, VERTEX, EDGE, PRINT, ADJACENCY, DIRECTED, UNDIRECTED;
terminal ARROW, DASH, COLON, ERROR;
terminal ID;

// NÃO-TERMINAIS
non terminal S, TYPE, VERTICES, EDGES, COMMANDS;

// REGRA INICIAL
start with S;

S ::= GRAPH COLON TYPE
    | error {: 
        parser.defineError("Esperado 'GRAPH:' no início do arquivo!");
      :}
    ;

TYPE ::= DIRECTED VERTICES EDGES COMMANDS
       | UNDIRECTED VERTICES EDGES COMMANDS
       | error {: parser.defineError("Tipo de grafo inválido. Use 'directed' ou 'undirected'"); :}
       ;

VERTICES ::= VERTEX ID VERTICES
           | /* vazio */
           ;

EDGES ::= EDGE ID ARROW ID EDGES     // para grafos direcionados
        | EDGE ID DASH ID EDGES      // para grafos não direcionados
        | /* vazio */
        ;

COMMANDS ::= PRINT ADJACENCY
           | /* vazio */
           ;